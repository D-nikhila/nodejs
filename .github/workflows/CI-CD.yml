name: ci-cd for nodejs-project

on :
  #push:
  #  branches:
  #    - sample
  #    - main
  #    - mas

  pull_request:
    branches:
      - sample
      - main
      - mas

  schedule:
    - cron: '45 4 * * *' # Runs every day at midnight

  workflow_dispatch: # Allows manual triggering of the workflow



jobs:

    build:
        runs-on: ubuntu-latest
    

        steps:
            - name: checkout code
              uses: actions/checkout@v4

            - name: extract version 
              run: |
                  BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///' | sed 's/\//-/g')

            - name: log in to docker
              uses: azure/docker-login@v2
              with:
                login-server: ${{ vars.ACR_HOST }}
                username: ${{ vars.ACR_USERNAME }}
                password: ${{ secrets.Azure_PASSWORD }}

            - name: build and push docker image
              run: |
                docker build -t ${{ vars.ACR_HOST }}/${{ vars.ACR_REPO}}:${{ BRANCH_NAME }} .
                docker push ${{ vars.ACR_HOST }}/${{ vars.ACR_REPO}}:${{ BRANCH_NAME }}

    Deploy:
        runs-on: ubuntu-latest
        needs: build


        steps:
            - name: login to azure
              uses: azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}


            - name: Set AKS Context
              uses: azure/aks-set-context@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
                resource-group: sample-dev-us-rg
                cluster-name: sample-dev-us-aks

           

            - name: install kubectl
              run: |
                az aks install-cli

            - name: set up kubectl
              uses: azure/setup-kubectl@v1
              with:
                version: 'latest'

            #- name: Get AKS Credentials
            #  run: |
            #    az aks get-credentials --resource-group sample-dev-us-rg --name sample-dev-us-aks

            - name: deploy to kubernetes
              run: |
                kubectl apply -f deployment/k8s.yml
                
                
                

  




            



  


            


